FROM quay.io/go-skynet/local-ai:v2.15.0-cublas-cuda12-ffmpeg

RUN echo "Placeholder: USER root"

RUN rm -rf /build/entrypoint.sh

RUN apt-get update && apt-get install -y curl wget nano tree

RUN wget --no-check-certificate --no-cache --no-cookies https://tea-cup.midori-ai.xyz/download/yaml_edit
RUN wget --no-check-certificate --no-cache --no-cookies https://tea-cup.midori-ai.xyz/download/hf-downloader
RUN wget --no-check-certificate --no-cache --no-cookies https://tea-cup.midori-ai.xyz/download/midori_program_requirments.txt
RUN wget --no-check-certificate --no-cache --no-cookies https://tea-cup.midori-ai.xyz/download/midori_ai_downloader

RUN curl -O https://raw.githubusercontent.com/lunamidori5/Midori-AI/master/other_files/subsystem_docker_stuff/localai/supporting_files/localai_entrypoint.sh

RUN chmod 777 hf-downloader
RUN chmod +x hf-downloader
RUN mv hf-downloader /usr/local/bin

RUN chmod 777 yaml_edit
RUN chmod +x yaml_edit
RUN mv yaml_edit /usr/local/bin

RUN chmod 777 midori_ai_downloader
RUN chmod +x midori_ai_downloader
RUN mv midori_ai_downloader /usr/local/bin

RUN chmod 777 localai_entrypoint.sh
RUN chmod +x localai_entrypoint.sh
RUN mv localai_entrypoint.sh /build/entrypoint.sh

## Remove these once Cryptk gets UV setup

RUN python3 -m pip install --no-cache-dir cryptography aiohttp tk
RUN python3 -m pip install --no-cache-dir -r midori_program_requirments.txt
RUN python3 -m pip cache purge

## UNCOMMENT these once Cryptk gets UV setup

# RUN uv venv /midori_subsystem_python_backend/.venv && \
#     source /midori_subsystem_python_backend/.venv/bin/activate && \
#     uv pip install cryptography aiohttp tk && \
#     uv pip install -r midori_program_requirments.txt

RUN apt-get autoclean && apt-get clean

RUN echo "Placeholder: USER localai"

ENTRYPOINT [ "/build/entrypoint.sh" ]